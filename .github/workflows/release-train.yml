name: CI - Create Release and Publish
on:
  push:
    branches: [ main ]
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
jobs:
  versioning:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.version }}
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: Semantic Version
      id: version
      uses: paulhatch/semantic-version@v5.4.0
      with:
        tag_prefix: ""
        major_pattern: /feat?/
        minor_pattern: /fix?/
        version_format: "${major}.${minor}.${patch}"
        bump_each_commit: false
  build-backend:
    runs-on: ubuntu-latest
    needs: versioning
    steps:
    - name: Checkout Branch
      uses: actions/checkout@v4
    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'zulu'
        java-version: '19'

    - name: Update version in pom.xml (Release only)
      run: |
        mvn -B versions:set -DnewVersion=${{ needs.versioning.outputs.version }} -DgenerateBackupPoms=false -Dregistry=https://maven.pkg.github.com/dishantkamble -Dtoken=$GH_TOKEN --file api/pom.xml
        git config user.email "dishantk@gmail.com"
        git config user.name "Dishant Kamble"
        git add .
        git commit -m "Bump Version - maven"
        git push
      env:
        GITHUB_TOKEN: ${{ github.token }}

    - name: Build with Maven
      run: mvn -B package --file api/pom.xml install -Dtoken=$GH_TOKEN
      env:
        GITHUB_TOKEN: ${{ github.token }}
    - name: Publish to GitHub Packages (Maven)
      run: |
        cd api
        mvn -B deploy -Dregistry=https://maven.pkg.github.com/dishantkamble -Dtoken=$GH_TOKEN
      env:
        GITHUB_TOKEN: ${{ github.token }}
  build-frontend:
    runs-on: ubuntu-latest
    needs:
    - versioning
    permissions:
      contents: read
      packages: write
    steps:
    - name: Checkout Branch
      uses: actions/checkout@v4
    - name: Setup Node.js 19.x
      uses: actions/setup-node@v4
      with:
        node-version: '19.x'
        registry-url: 'https://npm.pkg.github.com'

    - name: Install Packages
      run: |
        cd ui
        npm version ${{ needs.versioning.outputs.version }}
        npm i
        npm publish
      env:
        CI: false
        NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  docker:
    runs-on: ubuntu-latest
    needs: 
    - versioning
    - build-backend
    - build-frontend
    steps:
    - name: Checkout Branch
      uses: actions/checkout@v4

    - name: Log in to the Container registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Extract Docker tags & labels - Backend
      id: meta-api
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-api
        tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}},value=${{ needs.versioning.outputs.version }}
    - name: Extract Docker tags & labels - Frontend
      id: meta-ui
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-ui
        tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}},value=${{ needs.versioning.outputs.version }}

    - name: Build and Publish Image - Backend
      uses: docker/build-push-action@v6
      with:
        context: ./api
        push: true
        tags: ${{ steps.meta-api.outputs.tags }}
        labels: ${{ steps.meta-api.outputs.labels }}
    - name: Build and Publish Image - Frontend
      uses: docker/build-push-action@v6
      with:
        context: ./ui
        push: true
        tags: ${{ steps.meta-ui.outputs.tags }}
        labels: ${{ steps.meta-ui.outputs.labels }}
  release:
    runs-on: ubuntu-latest
    needs: 
    - versioning
    - build-backend
    - build-frontend
    - docker
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Generate Release change-log
      id: change-log
      uses: release-drafter/release-drafter@v6
      with:
        name: ${{ needs.versioning.outputs.version }}
        tag: ${{ needs.versioning.outputs.version }}
        version: ${{ needs.versioning.outputs.version }}
        publish: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
